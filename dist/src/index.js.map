{"version":3,"sources":["src/utils.js","src/ui.js","src/ui-styles.js","src/ui-texts.js","src/index.js"],"names":["existObjectKey","obj","key","undefined","getLastSlice","str","separator","strSlices","split","length","replaceLastSlice","newSlice","join","submitFormTo","route","form","action","submit","strpos","haystack","needle","indexOf","$","selector","document","querySelector","querySelectorAll","removeAttrFrom","element","attrName","removeAttribute","getAttrValue","attr","getDataValue","dataName","target","Array","isArray","dataset","addCssClass","className","position","forEach","addCssClassTo","classList","add","getCssClass","classNames","push","getCssClassFrom","hasCssClass","contains","removeCssClass","removeCssClassFrom","remove","addTextById","id","content","actual_content","innerText","removeText","removeTextById","setTextById"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["/**\n * JS-UI\n *\n * Moisés Alcocer, 2020\n * https://www.ironwoods.es\n * MIT Licence\n */\n\n const existObjectKey = (obj, key) => {\n    return (obj[key] !== undefined);\n}\n\nconst getLastSlice = (str, separator = '/') => {\n    const strSlices = str.split(separator);\n\n    return strSlices[strSlices.length - 1];\n}\n\nconst replaceLastSlice = (str, newSlice, separator = '/') => {\n    const strSlices = str.split(separator);\n    strSlices[strSlices.length - 1] = newSlice;\n\n    return strSlices.join(separator);\n}\n\nconst submitFormTo = (route, form) => {\n    form.action = route;\n    form.submit();\n}\n\nconst strpos = (haystack, needle) => {\n    return (haystack.indexOf(needle) >= 0);\n}\n\n\nexport default {\n    existObjectKey,\n    getLastSlice,\n    replaceLastSlice,\n    submitFormTo,\n    strpos,\n};\n","/**\n * JS-UI\n *\n * Moisés Alcocer, 2020\n * https://www.ironwoods.es\n * MIT Licence\n */\n\nconst $ = (selector) => {\n\n    if (selector.indexOf(\"#\") >= 0)\n        return document.querySelector(selector);\n\n    return document.querySelectorAll(selector);\n}\n\n\n/**\n * Node attributes\n *\n */\n\nconst removeAttrFrom = (element, attrName) => {\n    element.removeAttribute(attrName);\n}\n\nconst getAttrValue = (selector, attr) => {\n    return $(selector).attr;\n}\n\nconst getDataValue = (selector, dataName) => {\n    let target = $(selector);\n\n    if (Array.isArray(target) && target) {\n        target = target[0];\n    }\n\n    return target.dataset.dataName;\n}\n\n\nexport default {\n    $,\n    removeAttrFrom,\n    getAttrValue,\n    getDataValue,\n};\n","/**\n * JS-UI\n *\n * Moisés Alcocer, 2020\n * https://www.ironwoods.es\n * MIT Licence\n */\n\nconst addCssClass = (selector, className, position) => {\n    position = position ? position : 0;\n    let target = $(selector);\n\n    if (target && target.length > 1) {\n        if (position === 'all') {\n            target.forEach(element => {\n                addCssClassTo(element, className);\n            });\n\n        } else {\n            addCssClassTo(target[position], className);\n        }\n\n        return;\n    }\n\n    // $('#foo')  returns an element\n    // $('div p') returns an node collection\n    if (target[position] != undefined)\n        addCssClassTo(target[position], className);\n    else\n        addCssClassTo(target, className);\n}\n\nconst addCssClassTo = (element, className) => {\n    element.classList.add(className);\n}\n\nconst getCssClass = (selector, position) => {\n    position = position ? position : 0;\n    let target = $(selector);\n\n    if (target && target.length > 1) {\n        if (position === 'all') {\n            const classNames = [];\n            target.forEach(element => {\n                classNames.push(element.className);\n            });\n\n            return classNames; // array\n        }\n\n        return getCssClassFrom(target[position]); // string\n    }\n\n    return getCssClassFrom(target[position]); // string\n}\n\nconst getCssClassFrom = (element) => {\n    return element.className; // string\n}\n\nconst hasCssClass = (element, className) => {\n    return element.classList.contains(className);\n}\n\nconst removeCssClass = (selector, className, position) => {\n    position = position ? position : 0;\n    let target = $(selector);\n\n    if (target && target.length > 1) {\n        if (position === 'all') {\n            target.forEach(element => {\n                removeCssClassFrom(element, className);\n            });\n\n        } else {\n            removeCssClassFrom(target[position], className);\n        }\n\n        return;\n    }\n\n    // $('#foo')  returns an element\n    // $('div p') returns an node collection\n    if (target[position] != undefined)\n        removeCssClassFrom(target[position], className);\n    else\n        removeCssClassFrom(target, className);\n}\n\nconst removeCssClassFrom = (element, className) => {\n    element.classList.remove(className);\n}\n\n\nexport default {\n    addCssClass,\n    addCssClassTo,\n    getCssClass,\n    getCssClassFrom,\n    hasCssClass,\n    removeCssClass,\n    removeCssClassFrom,\n};\n","/**\n * JS-UI\n *\n * Moisés Alcocer, 2020\n * https://www.ironwoods.es\n * MIT Licence\n */\n\n\nconst addTextById = (id, content) => {\n    let actual_content = $(id).innerText;\n    $('#' + id).innerText = actual_content + content;\n}\n\nconst removeText = (selector, position) => {\n    position = position ? position : 0;\n    let target = $(selector);\n\n    if (target && target.length > 1) {\n        if (position === 'all') {\n            target.forEach(element => {\n                element.innerText = '';\n            });\n\n        } else {\n            target[position].innerText = '';\n        }\n\n        return;\n    }\n\n    target.innerText = '';\n}\n\nconst removeTextById = (id) => {\n    $('#' + id).innerText = '';\n}\n\nconst setTextById = (id, content) => {\n    $('#' + id).innerText = content;\n}\n\n\nexport default {\n    addTextById,\n    removeText,\n    removeTextById,\n    setTextById,\n};\n","import {\n    existObjectKey,\n    getLastSlice,\n    replaceLastSlice,\n    submitFormTo,\n    strpos\n} from './utils.js';\nimport {\n    $,\n    removeAttrFrom,\n    getAttrValue,\n    getDataValue\n} from './ui.js';\nimport {\n    addCssClass,\n    addCssClassTo,\n    getCssClass,\n    getCssClassFrom,\n    hasCssClass,\n    removeCssClass,\n    removeCssClassFrom,\n} from './ui-styles.js';\nimport {\n    addTextById,\n    removeText,\n    removeTextById,\n    setTextById,\n} from './ui-texts.js';\n"]}