var existObjectKey = function (t, e) { return void 0 !== t[e] }, submitFormTo = function (t, e) { e.action = t, e.submit() }; function getArrayPosition(t, e) { return t.indexOf(e) } function removeArrayMatch(t, e) { var r = getArrayPosition(t, e); return r >= 0 && t.splice(r, 1), t } function removeArrayMatches(t, e, r) { if (void 0 !== r && r) return removeArrayMatch(t, e); for (var n = 0; n < t.length;)t[n] === e ? t.splice(n, 1) : n++; return t } var getLastSlice = function (t, e) { e = e || "/"; var r = t.split(e); return r[r.length - 1] }, getSlice = function (t, e, r) { r = r || "/"; var n = t.split(r); return e < 0 && (e = n.length + e), e < n.length ? n[e] : "" }, getSlicesLength = function (t, e) { return e = e || "/", t.split(e).length }, replaceLastSlice = function (t, e, r) { r = r || "/"; var n = t.split(r); return n[n.length - 1] = e, n.join(r) }, replaceSlice = function (t, e, r, n) { if (!t || !e || void 0 === r) return console.error("ERR - Something is wrong with the params!"), ""; n = n || "/"; var o = t.split(n); return r < 0 && (r = o.length + r), r >= o.length ? (console.error("ERR - Too few parts for position: " + r), "") : (o[r] = e, o.join(n)) }, strhas = function (t, e) { return t.indexOf(e) >= 0 }, strpos = function (t, e) { return t.indexOf(e) }, $ = function (t) { return 0 === t.indexOf("#") && t.indexOf(" ") < 0 ? document.querySelector(t) : document.querySelectorAll(t) }, removeAttr = function (t, e) { getTargetDomNode(t).removeAttribute(e) }, removeAttrFrom = function (t, e) { t.removeAttribute(e) }, getAttrValue = function (t, e) { var r = getTargetDomNode(t).getAttribute(e); return r || "" }, getAttrValueFrom = function (t, e) { var r = t.getAttribute(e); return r || "" }, getDataValue = function (t, e) { var r = getTargetDomNode(t).dataset[e]; return r || "" }, getDataValueFrom = function (t, e) { var r = t.dataset[e]; return r || "" }; function getTargetDomNode(t) { var e = $(t); return (Array.isArray(e) || e) && (e = e[0]), e } var addClass = function (t, e, r) { r = r || 0; var n = $(t); n && n.length > 1 ? "all" === r ? n.forEach(function (t) { addClassTo(t, e) }) : addClassTo(n[r], e) : null != n[r] ? addClassTo(n[r], e) : addClassTo(n, e) }, addClassTo = function (t, e) { t.classList.add(e) }, addClassToAll = function (t, e) { t && "object" === _typeof(t) ? t.forEach(function (t) { addClassTo(t, e) }) : console.error("addClassToAll() - Err args") }, getClass = function (t, e) { e = e || 0; var r = $(t); if (r && r.length > 1) { if ("all" === e) { var n = []; return r.forEach(function (t) { n.push(t.className) }), n } return getClassFrom(r[e]) } return getClassFrom(r[e]) }, getClassFrom = function (t) { return t.className }, hasClass = function (t, e) { return t.classList.contains(e) }, removeClass = function (t, e, r) { r = r || 0; var n = $(t); n && n.length > 1 ? "all" === r ? n.forEach(function (t) { removeClassFrom(t, e) }) : removeClassFrom(n[r], e) : null != n[r] ? removeClassFrom(n[r], e) : removeClassFrom(n, e) }, removeClassFrom = function (t, e) { t.classList.remove(e) }, removeClassFromAll = function (t, e) { t && "object" === _typeof(t) ? t.forEach(function (t) { removeClassFrom(t, e) }) : console.error("removeClassFromAll() - Err args") }, toggleClassOf = function (t, e) { t.classList.toggle(e) }, addTextById = function (t, e) { t = getId(t); var r = getText($(t)); setText($(t), r + e) }; function getId(t) { return 0 === t.indexOf("#") ? t : "#" + t } function getText(t) { return t.innerText } var removeText = function (t, e) { e = e || 0; var r = $(t); r && r.length > 1 ? "all" === e ? r.forEach(function (t) { t.innerText = "" }) : r[e].innerText = "" : setText(r, "") }, removeTextById = function (t) { t = getId(t), setText($(t), "") }; function setText(t, e) { t.innerText = e } var setTextById = function (t, e) { t = getId(t), setText($(t), e) };
