const Settings = { DISABLE_CLASS_NAME: "disabled", HIDE_CLASS_NAME: "none" }; var existObjectKey = function (e, t) { return void 0 !== e[t] }, stop = function (e = "") { throw new Error(e ? "" + e : "STOP SCRIPT") }, submitFormTo = function (e, t) { t.action = e, t.submit() }; function getArrayPosition(e, t) { return e.indexOf(t) } function removeArrayMatch(e, t) { t = getArrayPosition(e, t); return 0 <= t && e.splice(t, 1), e } function removeArrayMatches(e, t, n) { if (void 0 !== n && n) return removeArrayMatch(e, t); for (var r = 0; r < e.length;)e[r] === t ? e.splice(r, 1) : r++; return e } function removeDuplicateValues(e) { return _toConsumableArray(new Set(e)) } function removeEmptyValues(e) { return e.filter(function (e) { return e && 0 < e.length }) } var getLastSlice = function (e, t) { t = t || "/"; t = e.split(t); return t[t.length - 1] }, getSlice = function (e, t, n) { n = n || "/"; n = e.split(n); return t < 0 && (t = n.length + t), t < n.length ? n[t] : "" }, getSlicesLength = function (e, t) { return t = t || "/", e.split(t).length }, replaceLastSlice = function (e, t, n) { n = n || "/"; e = e.split(n); return e[e.length - 1] = t, e.join(n) }, replaceSlice = function (e, t, n, r) { if (!e || !t || void 0 === n) return console.error("ERR - Something is wrong with the params!"), ""; r = r || "/"; e = e.split(r); return n < 0 && (n = e.length + n), n >= e.length ? (console.error("ERR - Too few parts for position: " + n), "") : (e[n] = t, e.join(r)) }, strhas = function (e, t) { return 0 <= e.indexOf(t) }, strpos = function (e, t) { return e.indexOf(t) }; function reduceWhiteSpaces(e) { for (e = new String(e); e.includes("  ");)e = e.replace("  ", " "); return "" + e } function removeWhiteSpaces(e) { for (e = new String(e); e.includes(" ");)e = e.replace(" ", ""); return "" + e } function $(e) { return 0 === e.indexOf("#") && e.indexOf(" ") < 0 ? document.querySelector(e) : document.querySelectorAll(e) } function getIdFromSelector(e) { var t = e.indexOf("#"), e = e.substr(t + 1); return e.includes(".") && (t = e.indexOf("."), e = e.substr(0, t)), e.includes("[") && (t = e.indexOf("["), e = e.substr(0, t)), e.trim() } function getIdSelector(e) { e = getIdFromSelector(e); return e ? "#" + e : "" } function getTargetDomNode(e) { e = $(e); return 1 === e.nodeType ? e : e.length ? e[0] : null } function isIdSelector(e) { var t = !0; return (e.includes(".") || e.includes("[")) && (t = !1), t } function qi(e) { return document.getElementById(e) } function qs(e) { return document.querySelector(e) } function qsa(e) { return document.querySelectorAll(e) } const getAttrValue = (e, t) => getAttrValueFrom(getTargetDomNode(e), t), getAttrValueFrom = (e, t) => { const n = getNode(e); return n.hasAttribute(t) ? n.getAttribute(t) : "" }; var getDataValue = function (e, t) { t = t.includes("data-") ? t : "data-" + t; const n = getNode(e); return n.hasAttribute(t) ? n.getAttribute(t) : "" }, getDataValueFrom = function (e, t) { return getDataValue(e, t) }, removeAttr = function (e, t) { getTargetDomNode(e).removeAttribute(t) }, removeAttrFrom = function (e, t) { e.removeAttribute(t) }; function disable(e) { e = getNode(e); e && e.classList.add(Settings.DISABLE_CLASS_NAME) } function enable(e) { e = getNode(e); e && e.classList.remove(Settings.DISABLE_CLASS_NAME) } function getNode(e) { return "string" == typeof e ? qs(e) : e } function getNodes(e) { return "string" == typeof e ? qsa(e) : e } function togglePairedDisplay(e, t) { e = getNode(e), t = getNode(t); e && (e.classList.remove(Settings.HIDE_CLASS_NAME), e.hidden = !1), t && (t.classList.add(Settings.HIDE_CLASS_NAME), e.hidden = !0) } var addClass = function (e, t, n) { n = n || 0; e = $(e); e && 1 < e.length ? "all" === n ? e.forEach(function (e) { addClassTo(e, t) }) : addClassTo(e[n], t) : null != e[n] ? addClassTo(e[n], t) : addClassTo(e, t) }, addClassTo = function (e, t) { e.classList.add(t) }, addClassToAll = function (e, t) { addClassToNodes(t, e) }; function addClassToNodes(t, e) { getNodes(e).forEach(function (e) { e && e.classList.add(t) }) } var getClass = function (e, t) { t = t || 0; e = $(e); if (e && 1 < e.length) { if ("all" !== t) return getClassFrom(e[t]); var n = []; return e.forEach(function (e) { n.push(e.className) }), n } return getClassFrom(e[t]) }, getClassFrom = function (e) { return e.className }, hasClass = function (e, t) { return e.classList.contains(t) }, removeClass = function (e, t, n) { n = n || 0; e = $(e); e && 1 < e.length ? "all" === n ? e.forEach(function (e) { removeClassFrom(e, t) }) : removeClassFrom(e[n], t) : null != e[n] ? removeClassFrom(e[n], t) : removeClassFrom(e, t) }, removeClassFrom = function (e, t) { e.classList.remove(t) }, removeClassFromAll = function (e, t) { removeClassFromNodes(t, e) }; function removeClassFromNodes(t, e) { getNodes(e).forEach(function (e) { e && e.classList.remove(t) }) } var toggleClassOf = function (e, t) { e.classList.toggle(t) }, addTextById = function (e, t) { var n = getText($(e = getIdSelector(e))); setText($(e), n + t) }; function getText(e) { return e.innerText } var removeText = function (e, t) { t = t || 0; e = $(e); e && 1 < e.length ? "all" === t ? e.forEach(function (e) { e.innerText = "" }) : e[t].innerText = "" : setText(e, "") }, removeTextById = function (e) { setText($(e = getIdSelector(e)), "") }; function setText(e, t) { e.innerText = t } var setTextById = function (e, t) { setText($(e = getIdSelector(e)), t) };
