var existObjectKey = function (t, e) { return void 0 !== t[e] }, submitFormTo = function (t, e) { e.action = t, e.submit() }, getLastSlice = function (t, e) { e = e || "/"; var r = t.split(e); return r[r.length - 1] }, getSlice = function (t, e, r) { r = r || "/"; var n = t.split(r); return e < 0 && (e = n.length + e), e < n.length ? n[e] : "" }, getSlicesLength = function (t, e) { return e = e || "/", t.split(e).length }, replaceLastSlice = function (t, e, r) { r = r || "/"; var n = t.split(r); return n[n.length - 1] = e, n.join(r) }, replaceSlice = function (t, e, r, n) { if (!t || !e || void 0 === r) return console.error("ERR - Something is wrong with the params!"), ""; n = n || "/"; var s = t.split(n); return r < 0 && (r = s.length + r), r >= s.length ? (console.error("ERR - Too few parts for position: " + r), "") : (s[r] = e, s.join(n)) }, strhas = function (t, e) { return t.indexOf(e) >= 0 }, strpos = function (t, e) { return t.indexOf(e) }, $ = function (t) { return 0 === t.indexOf("#") && t.indexOf(" ") < 0 ? document.querySelector(t) : document.querySelectorAll(t) }, removeAttr = function (t, e) { getTargetDomNode(t).removeAttribute(e) }, removeAttrFrom = function (t, e) { t.removeAttribute(e) }, getAttrValue = function (t, e) { var r = getTargetDomNode(t).getAttribute(e); return r || "" }, getAttrValueFrom = function (t, e) { var r = t.getAttribute(e); return r || "" }, getDataValue = function (t, e) { var r = getTargetDomNode(t).dataset[e]; return r || "" }, getDataValueFrom = function (t, e) { var r = t.dataset[e]; return r || "" }; function getTargetDomNode(t) { var e = $(t); return Array.isArray(e) && e && (e = e[0]), e } var addCssClass = function (t, e, r) { r = r || 0; var n = $(t); n && n.length > 1 ? "all" === r ? n.forEach(function (t) { addCssClassTo(t, e) }) : addCssClassTo(n[r], e) : null != n[r] ? addCssClassTo(n[r], e) : addCssClassTo(n, e) }, addCssClassTo = function (t, e) { t.classList.add(e) }, addCssClassToAll = function (t, e) { t && "object" == typeof t ? t.forEach(function (t) { addCssClassTo(t, e) }) : console.error("addCssClassToAll() - Err args") }, getCssClass = function (t, e) { e = e || 0; var r = $(t); if (r && r.length > 1) { if ("all" === e) { var n = []; return r.forEach(function (t) { n.push(t.className) }), n } return getCssClassFrom(r[e]) } return getCssClassFrom(r[e]) }, getCssClassFrom = function (t) { return t.className }, hasCssClass = function (t, e) { return t.classList.contains(e) }, removeCssClass = function (t, e, r) { r = r || 0; var n = $(t); n && n.length > 1 ? "all" === r ? n.forEach(function (t) { removeCssClassFrom(t, e) }) : removeCssClassFrom(n[r], e) : null != n[r] ? removeCssClassFrom(n[r], e) : removeCssClassFrom(n, e) }, removeCssClassFrom = function (t, e) { t.classList.remove(e) }, removeCssClassFromAll = function (t, e) { t.forEach(function (t) { removeCssClassFrom(t, e) }) }, addTextById = function (t, e) { t = getId(t); var r = getText($(t)); setText($(t), r + e) }; function getId(t) { return 0 === t.indexOf("#") ? t : "#" + t } function getText(t) { return t.innerText } var removeText = function (t, e) { e = e || 0; var r = $(t); r && r.length > 1 ? "all" === e ? r.forEach(function (t) { t.innerText = "" }) : r[e].innerText = "" : setText(r, "") }, removeTextById = function (t) { t = getId(t), setText($(t), "") }; function setText(t, e) { t.innerText = e } var setTextById = function (t, e) { t = getId(t), setText($(t), e) };
