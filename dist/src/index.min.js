var existObjectKey = function (e, t) { return void 0 !== e[t] }, submitFormTo = function (e, t) { t.action = e, t.submit() }; function getArrayPosition(e, t) { return e.indexOf(t) } function removeArrayMatch(e, t) { var r = getArrayPosition(e, t); return r >= 0 && e.splice(r, 1), e } function removeArrayMatches(e, t, r) { if (void 0 !== r && r) return removeArrayMatch(e, t); for (var n = 0; n < e.length;)e[n] === t ? e.splice(n, 1) : n++; return e } function removeDuplicateValues(e) { return _toConsumableArray(new Set(e)) } function removeEmptyValues(e) { return e.filter(function (e) { return e && e.length > 0 }) } var getLastSlice = function (e, t) { t = t || "/"; var r = e.split(t); return r[r.length - 1] }, getSlice = function (e, t, r) { r = r || "/"; var n = e.split(r); return t < 0 && (t = n.length + t), t < n.length ? n[t] : "" }, getSlicesLength = function (e, t) { return t = t || "/", e.split(t).length }, replaceLastSlice = function (e, t, r) { r = r || "/"; var n = e.split(r); return n[n.length - 1] = t, n.join(r) }, replaceSlice = function (e, t, r, n) { if (!e || !t || void 0 === r) return console.error("ERR - Something is wrong with the params!"), ""; n = n || "/"; var o = e.split(n); return r < 0 && (r = o.length + r), r >= o.length ? (console.error("ERR - Too few parts for position: " + r), "") : (o[r] = t, o.join(n)) }, strhas = function (e, t) { return e.indexOf(t) >= 0 }, strpos = function (e, t) { return e.indexOf(t) }; function reduceWhiteSpaces(e) { for (e = new String(e); e.includes("  ");)e = e.replace("  ", " "); return "" + e } function removeWhiteSpaces(e) { for (e = new String(e); e.includes(" ");)e = e.replace(" ", ""); return "" + e } function $(e) { return 0 === e.indexOf("#") && e.indexOf(" ") < 0 ? document.querySelector(e) : document.querySelectorAll(e) } function getId(e) { return 0 === e.indexOf("#") ? e : "#" + e } function getTargetDomNode(e) { var t = $(e); return (Array.isArray(t) || t) && (t = t[0]), t } function qi(e) { return document.getElementById(e) } function qs(e) { return document.querySelector(e) } function qsa(e) { return document.querySelectorAll(e) } var getAttrValue = function (e, t) { var r = getTargetDomNode(e).getAttribute(t); return r || "" }, getAttrValueFrom = function (e, t) { var r = e.getAttribute(t); return r || "" }, getDataValue = function (e, t) { var r = getTargetDomNode(e).dataset[t]; return r || "" }, getDataValueFrom = function (e, t) { var r = e.dataset[t]; return r || "" }, removeAttr = function (e, t) { getTargetDomNode(e).removeAttribute(t) }, removeAttrFrom = function (e, t) { e.removeAttribute(t) }, addClass = function (e, t, r) { r = r || 0; var n = $(e); n && n.length > 1 ? "all" === r ? n.forEach(function (e) { addClassTo(e, t) }) : addClassTo(n[r], t) : null != n[r] ? addClassTo(n[r], t) : addClassTo(n, t) }, addClassTo = function (e, t) { e.classList.add(t) }, addClassToAll = function (e, t) { e && "object" === _typeof(e) ? e.forEach(function (e) { addClassTo(e, t) }) : console.error("addClassToAll() - Err args") }, getClass = function (e, t) { t = t || 0; var r = $(e); if (r && r.length > 1) { if ("all" === t) { var n = []; return r.forEach(function (e) { n.push(e.className) }), n } return getClassFrom(r[t]) } return getClassFrom(r[t]) }, getClassFrom = function (e) { return e.className }, hasClass = function (e, t) { return e.classList.contains(t) }, removeClass = function (e, t, r) { r = r || 0; var n = $(e); n && n.length > 1 ? "all" === r ? n.forEach(function (e) { removeClassFrom(e, t) }) : removeClassFrom(n[r], t) : null != n[r] ? removeClassFrom(n[r], t) : removeClassFrom(n, t) }, removeClassFrom = function (e, t) { e.classList.remove(t) }, removeClassFromAll = function (e, t) { e && "object" === _typeof(e) ? e.forEach(function (e) { removeClassFrom(e, t) }) : console.error("removeClassFromAll() - Err args") }, toggleClassOf = function (e, t) { e.classList.toggle(t) }, addTextById = function (e, t) { var r = getText($(e = getId(e))); setText($(e), r + t) }; function getText(e) { return e.innerText } var removeText = function (e, t) { t = t || 0; var r = $(e); r && r.length > 1 ? "all" === t ? r.forEach(function (e) { e.innerText = "" }) : r[t].innerText = "" : setText(r, "") }, removeTextById = function (e) { setText($(e = getId(e)), "") }; function setText(e, t) { e.innerText = t } var setTextById = function (e, t) { setText($(e = getId(e)), t) };
